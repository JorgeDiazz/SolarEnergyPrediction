// Mocks generated by Mockito 5.4.3 from annotations
// in solar_energy_prediction/test/features/map/domain/use_cases/mocks/use_cases_mock_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:solar_energy_prediction/core/errors/failures.dart' as _i5;
import 'package:solar_energy_prediction/features/map/domain/entities/weather_data.dart'
    as _i6;
import 'package:solar_energy_prediction/features/map/domain/entities/weather_forecast.dart'
    as _i8;
import 'package:solar_energy_prediction/features/map/domain/repositories/map/weather_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepository extends _i1.Mock implements _i3.WeatherRepository {
  MockWeatherRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.WeatherData>> getWeatherData(
          {required _i7.LatLng? location}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeatherData,
          [],
          {#location: location},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.WeatherData>>.value(
            _FakeEither_0<_i5.Failure, _i6.WeatherData>(
          this,
          Invocation.method(
            #getWeatherData,
            [],
            {#location: location},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.WeatherData>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.WeatherForecast>>
      getWeather5DaysForecast({required _i7.LatLng? location}) =>
          (super.noSuchMethod(
            Invocation.method(
              #getWeather5DaysForecast,
              [],
              {#location: location},
            ),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i8.WeatherForecast>>.value(
                    _FakeEither_0<_i5.Failure, _i8.WeatherForecast>(
              this,
              Invocation.method(
                #getWeather5DaysForecast,
                [],
                {#location: location},
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, _i8.WeatherForecast>>);
}
